[{"/Users/sang/Desktop/udemy/07-react-ts-starting-project/src/index.tsx":"1","/Users/sang/Desktop/udemy/07-react-ts-starting-project/src/App.tsx":"2","/Users/sang/Desktop/udemy/07-react-ts-starting-project/src/components/Todos.tsx":"3","/Users/sang/Desktop/udemy/07-react-ts-starting-project/src/models/todo.ts":"4","/Users/sang/Desktop/udemy/07-react-ts-starting-project/src/components/TodoItem.tsx":"5","/Users/sang/Desktop/udemy/07-react-ts-starting-project/src/components/NextTodo.tsx":"6"},{"size":168,"mtime":1667893802949,"results":"7","hashOfConfig":"8"},{"size":546,"mtime":1669091800795,"results":"9","hashOfConfig":"8"},{"size":376,"mtime":1669091872311,"results":"10","hashOfConfig":"8"},{"size":172,"mtime":1667901256834,"results":"11","hashOfConfig":"8"},{"size":215,"mtime":1669088926258,"results":"12","hashOfConfig":"8"},{"size":735,"mtime":1669089027725,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"t6xndm",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/Users/sang/Desktop/udemy/07-react-ts-starting-project/src/index.tsx",[],["29","30"],"/Users/sang/Desktop/udemy/07-react-ts-starting-project/src/App.tsx",[],"/Users/sang/Desktop/udemy/07-react-ts-starting-project/src/components/Todos.tsx",["31"],"/Users/sang/Desktop/udemy/07-react-ts-starting-project/src/models/todo.ts",[],"/Users/sang/Desktop/udemy/07-react-ts-starting-project/src/components/TodoItem.tsx",["32"],"import React from \"react\";\nimport classes from \"./TodoItem.module.css\";\n\nconst TodoItem: React.FC<{ text: string }> = props => {\n  return <li className={classes.item}>{props.text}</li>;\n};\n\nexport default TodoItem;\n","/Users/sang/Desktop/udemy/07-react-ts-starting-project/src/components/NextTodo.tsx",["33"],"import React, { useRef } from \"react\";\n\nimport classes from \"./NewTodo.module.css\";\n\nconst NewTodo: React.FC<{ onAddTodo: (text: string) => void }> = props => {\n  const todoTextInputRef = useRef<HTMLInputElement>(null);\n\n  const submitHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const enteredText = todoTextInputRef.current!.value;\n\n    if (enteredText.trim().length === 0) {\n      //\n      return;\n    }\n\n    props.onAddTodo(enteredText);\n  };\n  return (\n    <form onSubmit={submitHandler} className={classes.form}>\n      <label htmlFor=\"text\"> Todotext : </label>\n      <input type=\"text\" id=\"text\" ref={todoTextInputRef} />\n      <button> Add Todo </button>\n    </form>\n  );\n};\n\nexport default NewTodo;\n",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":9,"column":8,"nodeType":"40","messageId":"41","endLine":9,"endColumn":19},{"ruleId":"38","severity":1,"message":"39","line":5,"column":40,"nodeType":"40","messageId":"41","endLine":5,"endColumn":50},{"ruleId":"38","severity":1,"message":"39","line":18,"column":5,"nodeType":"40","messageId":"41","endLine":18,"endColumn":20},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"react/destructuring-assignment","Must use destructuring props assignment","MemberExpression","useDestructAssignment","no-global-assign","no-unsafe-negation"]